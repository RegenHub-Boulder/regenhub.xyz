name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:
  workflow_run:
    workflows: ["Store PR Preview"]
    types: [completed]

permissions:
  contents: read
  pages: write
  id-token: write
  actions: read

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Build main site
        run: pnpm run build

      - name: Download all PR preview artifacts
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // Get all artifacts that start with 'pr-preview-'
            const artifacts = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100
            });

            for (const artifact of artifacts.data.artifacts) {
              if (artifact.name.startsWith('pr-preview-')) {
                console.log(`Downloading ${artifact.name}...`);

                const download = await github.rest.actions.downloadArtifact({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  artifact_id: artifact.id,
                  archive_format: 'zip',
                });

                const prNumber = artifact.name.replace('pr-preview-', '');
                const dir = `dist/pr-${prNumber}`;

                // Create directory and extract
                fs.mkdirSync(dir, { recursive: true });
                fs.writeFileSync(`${artifact.name}.zip`, Buffer.from(download.data));

                // Unzip to the PR directory
                await exec.exec('unzip', ['-o', `${artifact.name}.zip`, '-d', dir]);
                fs.unlinkSync(`${artifact.name}.zip`);
              }
            }

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./dist"

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
